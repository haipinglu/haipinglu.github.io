<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Filip Miljković | Haiping Lu</title><link>https://haipinglu.github.io/authors/filip-miljkovic/</link><atom:link href="https://haipinglu.github.io/authors/filip-miljkovic/index.xml" rel="self" type="application/rss+xml"/><description>Filip Miljković</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>© 2025 by Haiping Lu</copyright><lastBuildDate>Mon, 16 Jun 2025 00:00:00 +0000</lastBuildDate><image><url>https://haipinglu.github.io/authors/filip-miljkovic/avatar_hu14860a8c5e17820a80e05a585e3b16b4_42602_270x270_fill_q75_lanczos_center.jpg</url><title>Filip Miljković</title><link>https://haipinglu.github.io/authors/filip-miljkovic/</link></image><item><title>Inverse protein folding via denoising diffusion</title><link>https://haipinglu.github.io/project/inverse-protein-folding/</link><pubDate>Mon, 16 Jun 2025 00:00:00 +0000</pubDate><guid>https://haipinglu.github.io/project/inverse-protein-folding/</guid><description>&lt;p>Inverse protein folding generates valid amino acid sequences that can fold into a desired protein structure, with recent deep-learning advances showing significant potential and competitive performance. However, challenges remain in predicting highly uncertain regions, such as those with loops and disorders. To tackle such low-confidence residue prediction, we propose a &lt;strong>Ma&lt;/strong>sk &lt;strong>p&lt;/strong>rior-guided denoising &lt;strong>Diff&lt;/strong>usion (&lt;strong>MapDiff&lt;/strong>) framework that accurately captures both structural and residue interactions for inverse protein folding. MapDiff is a discrete diffusion probabilistic model that iteratively generates amino acid sequences with reduced noise, conditioned on a given protein backbone. To incorporate structural and residue interactions, we develop a graph-based denoising network with a mask prior pre-training strategy. Moreover, in the generative process, we combine the denoising diffusion implicit model with Monte-Carlo dropout to improve uncertainty estimation. Evaluation on four challenging sequence design benchmarks shows that MapDiff significantly outperforms state-of-the-art methods. Furthermore, the in-silico sequences generated by MapDiff closely resemble the physico-chemical and structural characteristics of native proteins across different protein families and architectures.&lt;/p></description></item><item><title>Drug–target interaction prediction via bilinear attention network</title><link>https://haipinglu.github.io/project/drug-target-interaction-prediction/</link><pubDate>Wed, 01 Feb 2023 00:00:00 +0000</pubDate><guid>https://haipinglu.github.io/project/drug-target-interaction-prediction/</guid><description>&lt;p>Predicting drug–target interaction is key for drug discovery. Recent deep learning-based methods show promising performance, but two challenges remain: how to explicitly model and learn local interactions between drugs and targets for better prediction and interpretation and how to optimize generalization performance of predictions on novel drug–target pairs. Here, we present &lt;strong>DrugBAN&lt;/strong>, a deep &lt;strong>B&lt;/strong>ilinear &lt;strong>A&lt;/strong>ttention &lt;strong>N&lt;/strong>etwork (&lt;strong>BAN&lt;/strong>) framework with domain adaptation to explicitly learn pairwise local interactions between drugs and targets, and adapt in response to out-of-distribution data. DrugBAN works on drug molecular graphs and target protein sequences to perform prediction, with conditional domain adversarial learning to align learned interaction representations across different distributions for better generalization on novel drug–target pairs. Experiments on three benchmark datasets under both in-domain and cross-domain settings show that DrugBAN achieves the best overall performance against five state-of-the-art baseline models. Moreover, visualizing the learned bilinear attention map provides interpretable insights from prediction results.&lt;/p></description></item><item><title>Low-Bias Evaluation of Drug-Target Interaction</title><link>https://haipinglu.github.io/project-removed/dti-graph-eval/</link><pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate><guid>https://haipinglu.github.io/project-removed/dti-graph-eval/</guid><description>&lt;p>This project is in collaboration with AstraZeneca.&lt;/p>
&lt;p>Drug-target interaction (DTI) prediction is important in drug discovery and chemogenomics studies. Machine learning, particularly deep learning, has advanced this area significantly over the past few years. However, a significant gap between the performance reported in academic papers and that in practical drug discovery settings, e.g. the random-split-based evaluation strategy tends to be too optimistic in estimating the prediction performance in real-world settings. Such performance gap is largely due to hidden data bias in experimental datasets and inappropriate data split.&lt;/p>
&lt;p>In this project, we construct a low-bias DTI dataset and study more challenging data split strategies to improve performance evaluation for real-world settings. Specifically, we study the data bias in a popular DTI dataset, BindingDB, and re-evaluate the prediction performance of three state-of-the-art deep learning models using five different data split strategies: random split, cold drug split, scaffold split, and two hierarchical-clustering-based splits. In addition, we comprehensively examine six performance metrics. Our experimental results confirm the overoptimism of the popular random split and show that hierarchical-clustering-based splits are far more challenging and can provide potentially more useful assessment of model generalizability in real-world DTI prediction settings.&lt;/p></description></item><item><title>Hierarchical clustering split for low-bias evaluation of drug-target interaction prediction</title><link>https://haipinglu.github.io/publication/bai-2021-hierarchical/</link><pubDate>Thu, 02 Dec 2021 00:00:00 +0000</pubDate><guid>https://haipinglu.github.io/publication/bai-2021-hierarchical/</guid><description/></item></channel></rss>