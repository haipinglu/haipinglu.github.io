<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Graph Machine Learning | Haiping Lu</title><link>https://haipinglu.github.io/tag/graph-machine-learning/</link><atom:link href="https://haipinglu.github.io/tag/graph-machine-learning/index.xml" rel="self" type="application/rss+xml"/><description>Graph Machine Learning</description><generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><copyright>Â© 2024 by Haiping Lu</copyright><lastBuildDate>Fri, 31 Dec 2021 00:00:00 +0000</lastBuildDate><image><url>https://haipinglu.github.io/media/icon_huc5fd9f1b4f03f2d64add7afcb374c1e6_29577_512x512_fill_lanczos_center_3.png</url><title>Graph Machine Learning</title><link>https://haipinglu.github.io/tag/graph-machine-learning/</link></image><item><title>PyKale: an ML Library in PyTorch Ecosystem</title><link>https://haipinglu.github.io/project/pykale/</link><pubDate>Fri, 31 Dec 2021 00:00:00 +0000</pubDate><guid>https://haipinglu.github.io/project/pykale/</guid><description>&lt;p>PyKale is a library in the PyTorch ecosystem aiming to make machine learning more accessible to interdisciplinary research by bridging gaps between data, software, and end users. Both machine learning experts and end users can do better research with our accessible, scalable, and sustainable design, guided by green machine learning principles. PyKale has a unified pipeline-based API and focuses on multimodal learning and transfer learning for graphs, images, texts, and videos at the moment, with supporting models on deep learning and dimensionality reduction.&lt;/p>
&lt;p>PyKale enforces standardization and minimalism, via green machine learning concepts of reducing repetitions and redundancy, reusing existing resources, and recycling learning models across areas. PyKale will enable and accelerate interdisciplinary, knowledge-aware machine learning research for graphs, images, texts, and videos in applications including bioinformatics, graph analysis, image/video recognition, and medical imaging, with an overarching theme of leveraging knowledge from multiple sources for accurate and interpretable prediction.&lt;/p></description></item><item><title>Low-Bias Evaluation of Drug-Target Interaction</title><link>https://haipinglu.github.io/project/dti-graph-eval/</link><pubDate>Sat, 11 Dec 2021 00:00:00 +0000</pubDate><guid>https://haipinglu.github.io/project/dti-graph-eval/</guid><description>&lt;p>This project is in collaboration with AstraZeneca.&lt;/p>
&lt;p>Drug-target interaction (DTI) prediction is important in drug discovery and chemogenomics studies. Machine learning, particularly deep learning, has advanced this area significantly over the past few years. However, a significant gap between the performance reported in academic papers and that in practical drug discovery settings, e.g. the random-split-based evaluation strategy tends to be too optimistic in estimating the prediction performance in real-world settings. Such performance gap is largely due to hidden data bias in experimental datasets and inappropriate data split.&lt;/p>
&lt;p>In this project, we construct a low-bias DTI dataset and study more challenging data split strategies to improve performance evaluation for real-world settings. Specifically, we study the data bias in a popular DTI dataset, BindingDB, and re-evaluate the prediction performance of three state-of-the-art deep learning models using five different data split strategies: random split, cold drug split, scaffold split, and two hierarchical-clustering-based splits. In addition, we comprehensively examine six performance metrics. Our experimental results confirm the overoptimism of the popular random split and show that hierarchical-clustering-based splits are far more challenging and can provide potentially more useful assessment of model generalizability in real-world DTI prediction settings.&lt;/p></description></item><item><title>Mixed-order Spectral Clustering for Networks</title><link>https://haipinglu.github.io/project/mixed-order-clustering/</link><pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate><guid>https://haipinglu.github.io/project/mixed-order-clustering/</guid><description>&lt;p>Spectral clustering (SC) is a popular approach for gaining insights from complex networks. Conventional SC focuses on second-order structures (e.g. edges) without direct consideration of higher-order structures (e.g. triangles). This has motivated SC extensions that directly consider higher-order structures. However, both approaches are limited to considering a single order.&lt;/p>
&lt;p>To address this issue, we propose a novel Mixed-Order Spectral Clustering (MOSC) framework to model both second-order and third-order structures simultaneously. To model mixed-order structures, we propose two new methods based on Graph Laplacian (GL) and Random Walks (RW). MOSC-GL combines edge and triangle adjacency matrices, with theoretical performance guarantee. MOSC-RW combines first-order and second-order random walks for a probabilistic interpretation. Moreover, we design mixed-order cut criteria to enable existing SC methods to preserve mixed-order structures, and develop new mixed-order evaluation metrics for structure-level evaluation. Experiments on community detection and superpixel segmentation show (1) the superior performance of the MOSC methods over existing SC methods, (2) enhanced performance of conventional SC due to mixed-order cut criteria, and (3) new insights of output clusters offered by the mixed-order evaluation metrics.&lt;/p></description></item><item><title>Learnable GCN Aggregator</title><link>https://haipinglu.github.io/project/learnable-gcn-aggregator/</link><pubDate>Thu, 01 Oct 2020 00:00:00 +0000</pubDate><guid>https://haipinglu.github.io/project/learnable-gcn-aggregator/</guid><description>&lt;p>Neighborhood aggregation is a key step in Graph Convolutional Networks (GCNs) for graph representation learning. Two commonly used aggregators, sum and mean, are designed with the homophily assumption that connected nodes are likely to share the same label. However, real-world graphs are noisy and adjacent nodes do not necessarily imply similarity.Learnable aggregators are proposed in Graph Attention Network (GAT) and Learnable Graph Convolutional Layer (LGCL). However, GAT considers node importance but not the importance of different features. The convolution aggregator in LGCL considers feature importance but it can not directly operate on graphs due to the irregular connectivity and lack of orderliness.&lt;/p>
&lt;p>In this work, we firstly unify the current learnable aggregators in a framework: Learnable Aggregator for GCN (LA-GCN) by introducing a shared auxiliary model that provides a customized schema in neighborhood aggregation. Under this framework, we propose a new model called LA-GCNMask consisting of a new aggregator function,mask aggregator. The auxiliary model learns a specific mask for each neighbor of a given node, allowing both node-level and feature-level attention. This mechanism learns to assign different importance to both nodes and features for prediction, which provides interpretable explanations for prediction and increases the model robustness. Experiments on seven graphs for node classification and graph classification tasks show that LA-GCNMask outperforms the state-of-the-art methods. Moreover, our aggregator can identify both the important nodes and node features simultaneously, which provides a quantified understanding of the relationship between input nodes and the prediction. We further conduct experiments on noisy graphs to evaluate the robustness of our model. Experiments show that LA-GCNMask consistently outperforms the state-of-the-art methods, with up to 15% improvements in terms of accuracy compared to the second best.&lt;/p></description></item></channel></rss>